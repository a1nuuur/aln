"""a lot of stuff added

Revision ID: 1ddb92c360a4
Revises: 
Create Date: 2023-02-11 09:24:39.843609

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

revision = '1ddb92c360a4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=125), nullable=False),
    sa.PrimaryKeyConstraint('id', 'name'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=True)
    op.create_table('permissions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=True)
    op.create_table('sellers',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('country', sa.String(length=125), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('is_activated', sa.Boolean(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sellers_id'), 'sellers', ['id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('lastname', sa.String(length=255), nullable=True),
    sa.Column('last_online', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('is_stuff', sa.Boolean(), nullable=True),
    sa.Column('image_url', sa.String(length=256), nullable=True),
    sa.Column('bio', sa.String(length=256), nullable=True),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('encrypted_password', sa.String(length=300), nullable=False),
    sa.Column('salt', sa.String(length=256), nullable=False),
    sa.Column('is_deactivated', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'username', 'uuid')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('wallets',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('_money', sa.DECIMAL(), nullable=True),
    sa.Column('current', sa.String(length=5), nullable=True),
    sa.Column('is_frozen', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wallets_id'), 'wallets', ['id'], unique=True)
    op.create_table('money_transactions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('money_change', sa.DECIMAL(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('wallet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_money_transactions_id'), 'money_transactions', ['id'], unique=True)
    op.create_table('user_to_groups',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'group_id')
    )
    op.create_index(op.f('ix_user_to_groups_id'), 'user_to_groups', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_to_groups_id'), table_name='user_to_groups')
    op.drop_table('user_to_groups')
    op.drop_index(op.f('ix_money_transactions_id'), table_name='money_transactions')
    op.drop_table('money_transactions')
    op.drop_index(op.f('ix_wallets_id'), table_name='wallets')
    op.drop_table('wallets')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_sellers_id'), table_name='sellers')
    op.drop_table('sellers')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_table('groups')
    # ### end Alembic commands ###
