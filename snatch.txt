То что можно спиздить из этого проекта, и как адаптировать в спред бан в1.

Спиздить можно - конфигурацию алембика, т.к. не делает из корневой папки свалку.

Депенденси инжекшион, модификация функции, с помощью параметров,
а функция зависима от них, но не важно какие параметры, их то можно заменить.
Пример: функция машины доставить пассажира с А в Б, ему не важно какая машина,
или какой двигатель, главное что бы работал исправно. Двигатель, машину и тд.
Можно заменить.

Для будуших проектов без орм, использвания aiosql,
и инструмента автогененрации aiosql, который с помощью
Комментариев может разделять, и использвать определенные участки sql кода,
для запросов. УДОБНО!

Создание тестов. то что я понял,
это - все как в гоу тестах, но с мидлварами, и с фикстурами(переменные передоваемые в аргументы тестов).

Центролизировать глобальные переменные которые будут использватся часто, т.к
Config, App, Session(sqla), и Шедулер(возможно), Либо сделать их доступными откуда угодно,
С помощью функции, и кэширования результата этой функции.
И по возможности уменьшить использвания глобальных переменных так как это делает код адом, и не красивым

Делать код более независымым, для быстрого измениния самого приложения.
Пример: Создавать глобальные переменные там где они нужны, если они используются один раз
а не туда где сохраняются все глобальные переменные(кроме редких исключении).

* Важно, если ты столкнулся с тем что надо иморитровать типы для pydantic-a
  то при импорте используй TYPE_CHECKING и под проверкой этой переменной
  импортируй типы. Источник - https://adamj.eu/tech/2021/05/13/python-type-hints-how-to-fix-circular-imports/
  и не забывай добавить ковычки, или добавить в начало файла from __future__ import annotations

Что тут очень не тревиально так это обьевление моделей. Тут при церкулярном импорте моделей
То делаешь то что сказано вот тут:
https://stackoverflow.com/questions/74346565/fastapi-typeerror-issubclass-arg-1-must-be-a-class-with-modular-imports

Если сталкиваешься со проблемой greenlet error то добовляешь db.refresh(object)
и все, проблема решается
